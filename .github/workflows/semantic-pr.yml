name: semantic-pr-title

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, ready_for_review]

permissions:
  pull-requests: write
  issues: write

jobs:
  lint-title:
    runs-on: ubuntu-latest
    steps:
      - name: Ensure PR title follows Conventional Commits
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |-
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          requireScope: false
          subjectPattern: '^[^ ].+[^ .]$'
          wip: false

  comment-on-fail-title:
    runs-on: ubuntu-latest
    needs: lint-title
    if: failure() && github.event_name == 'pull_request'
    steps:
      - name: Post guidance comment on PR title
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            if (!pr) return;
            const body = `ðŸš¦ PR title check failed. Please use Conventional Commits.\n\n` +
              `Format: \`type(scope?): subject\` (imperative, concise)\n` +
              `Types: feat, fix, docs, style, refactor, perf, test, build, ci, chore, revert\n` +
              `Breaking: \`type(scope)!: subject\` or footer \`BREAKING CHANGE: ...\`\n\n` +
              `Examples:\n` +
              `- feat(config): add env interpolation for base dir\n` +
              `- fix(cli): handle empty stdin without error\n\n` +
              `Edit the PR title above to resolve this check.`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr.number,
              body,
            });
