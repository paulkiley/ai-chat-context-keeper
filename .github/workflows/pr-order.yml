name: pr-order

on:
  pull_request:
    types: [opened, synchronize, edited]

jobs:
  check-order:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # pin: v4
      - name: Check PR dependency order
        uses: actions/github-script@5c56fde4671bc2d3592fb0f2c5b5bab9ddae03b1 # pin: v7
        with:
          script: |
            const fs = require('fs');
            const depsPath = '.github/pr-deps.json';
            if (!fs.existsSync(depsPath)) {
              core.info('No pr-deps.json found; skipping');
              return;
            }
            const deps = JSON.parse(fs.readFileSync(depsPath, 'utf8'));
            const headRef = context.payload.pull_request.head.ref;
            if (!deps[headRef]) {
              core.info(`No dependency rule for ${headRef}`);
              return;
            }
            const needs = deps[headRef].depends_on || [];
            const owner = context.repo.owner;
            const repo = context.repo.repo;
            const base = context.payload.pull_request.base.ref;
            for (const dep of needs) {
              const prs = await github.paginate(github.rest.pulls.list, { owner, repo, state: 'all', head: `${owner}:${dep}`, base });
              if (!prs.length) {
                core.setFailed(`Dependency PR for branch '${dep}' not found (base ${base}).`);
                return;
              }
              const pr = prs[0];
              if (!pr.merged_at) {
                core.setFailed(`Dependency PR #${pr.number} (${dep}) is not merged yet. Merge it first.`);
                return;
              }
            }
            core.info('Dependency order satisfied.');
