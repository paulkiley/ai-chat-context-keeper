[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "chat_history_manager"
version = "0.2.1"
description = "A robust system for managing and retrieving conversational AI history."
authors = [
    { name = "Paul Kiley & Gemini", email = "ai-agent@example.com" }
]
requires-python = ">=3.8"
dependencies = [
    "pydantic-settings>=2.0", # For robust settings management
]
readme = "README.md"

[project.scripts]
chatlog = "chat_history_manager.cli:main"

[project.urls]
Homepage = "https://github.com/paulkiley/chat_history_manager" # Placeholder
"Bug Tracker" = "https://github.com/paulkiley/chat_history_manager/issues" # Placeholder

[project.optional-dependencies]
dev = [
    "pytest",
    "pytest-cov",
    "ruff",
    "pre-commit",
    "commitizen",
]
secrets = [
    "keyring>=24.0.0",
]
docs = [
    "mkdocs>=1.5",
    "mkdocs-material>=9.5",
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.2.1"
tag_format = "v$version"
version_files = [
  "src/chat_history_manager/__init__.py:__version__",
]
update_changelog_on_bump = true
changelog_file = "CHANGELOG.md"

[tool.setuptools.packages.find]
where = ["src"]

[tool.ruff]
line-length = 88
target-version = "py38"

[tool.ruff.lint]
select = ["E", "F", "W", "I"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --cov=src/chat_history_manager --cov-report=term-missing"
testpaths = [
    "tests",
]
